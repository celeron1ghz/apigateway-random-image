service: apigateway-random-image

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-northeast-1
  deploymentBucket: serverless-upload-ap-northeast-1
  versionFunctions: false

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:List*"
      Resource:
        Fn::Join:
          - ""
          - [ "arn:aws:s3:::", { Ref: S3Bucket } ]
    - Effect: Allow
      Action:
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - [ "arn:aws:s3:::", { Ref: S3Bucket }, "/*" ]

plugins:
 - serverless-apigw-binary

custom:
  apigwBinary:
    types: ['image/jpeg']

functions:
  main:
    handler: handler.main
    description: Return image file randomly on specified bucket
    events:
      - http:
          method: get
          path: image
          integration: lambda_proxy

resources:
  Description: Return image file randomly on specified bucket
  Resources:
    IamRoleLambdaExecution:
      Properties:
        RoleName: "${self:service}"

    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: apigateway-random-image

    Cloudfront:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            TargetOriginId: LambdaRandomImage
            ViewerProtocolPolicy: allow-all
            ForwardedValues:
              QueryString: true
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
          Enabled: true
          Origins:
            - Id: LambdaRandomImage
              DomainName:
                Fn::Join:
                  - ""
                  - [ { Ref: "ApiGatewayRestApi" }, ".execute-api.ap-northeast-1.amazonaws.com" ]
              OriginPath: "/dev/image"
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
              OriginCustomHeaders:
                - HeaderName: Accept
                  HeaderValue: image/jpeg

  Outputs:
     S3Bucket:
       Description: "Randomly select image from this bucket"
       Value: { Ref: S3Bucket }
     CloudfrontUrl:
       Description: "Randomly select image from this bucket"
       Value: { Fn::GetAtt: [Cloudfront, DomainName] }
